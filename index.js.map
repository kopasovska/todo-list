{"version":3,"file":"index.js","sources":["../src/js/refs.js","../src/js/storage.js","../src/js/stats.js","../src/js/renderCards.js","../src/js/lists.js","../src/js/tasks.js","../src/js/weatherAPI.js","../src/js/theme.js","../src/img/sprite.svg","../src/js/renderWeatherWidget.js","../src/main.js"],"sourcesContent":["export const refs = {\n  listInput: document.querySelector('.list-input'),\n  addListForm: document.querySelector('.add-new-list-form'),\n  statsContainer: document.querySelector('.nav-stats'),\n  cardsContainer: document.querySelector('.cards-list'),\n  noCardsInfo: document.querySelector('.no-lists-info'),\n  themeToggleBtn: document.querySelector('.theme-toggle-btn'),\n  root: document.documentElement,\n  weatherButton: document.querySelector('.weather-button'),\n  faSunIcon: document.querySelector('.fa-sun'),\n  faCloudIcon: document.querySelector('.fa-cloud'),\n  weatherWidget: document.querySelector('.weather-widget'),\n};\n","export const getSavedData = () => {\n  return JSON.parse(localStorage.getItem('todoApp')) || [];\n};\n\nexport const saveData = data => {\n  localStorage.setItem('todoApp', JSON.stringify(data));\n};\n","import { getSavedData, saveData } from './storage.js';\nimport { refs } from './refs.js';\n\nexport const updateStats = () => {\n  const data = getSavedData();\n\n  if (!data.length) {\n    refs.statsContainer.textContent = '0/0 tasks completed';\n  } else {\n    const totalTasks = data.reduce((sum, list) => sum + list.tasks.length, 0);\n    const completedTaks = data.reduce(\n      (sum, list) => sum + list.tasks.filter(t => t.completed).length,\n      0\n    );\n    refs.statsContainer.textContent = `${\n      completedTaks || '0'\n    }/${totalTasks} tasks completed`;\n  }\n};\n","import { updateStats } from './stats.js';\nimport { refs } from './refs.js';\nimport { getSavedData, saveData } from './storage.js';\n\nconst renderTask = task => {\n  return `\n    <li class=\"task-item\" data-id=\"${task.id}\">\n      <span class=\"task-info-wrapper\">\n        <i class=\"task-check fa-regular ${\n          task.completed ? 'fa-circle-check' : 'fa-circle'\n        }\"></i>\n        <p class=\"task-text ${task.completed ? 'muted-text' : ''}\">${\n    task.text\n  }</p>\n      </span>\n      <div class=\"task-toolbar\">\n        <button type=\"button\" class=\"secondary-btn edit-task-btn\">\n          <i class=\"fa-solid fa-pen\"></i>\n        </button>\n        <button type=\"button\" class=\"secondary-btn delete-task-btn\">\n          <i class=\"fa-solid fa-trash\"></i>\n        </button>\n      </div>\n    </li>\n  `;\n};\n\nconst renderCard = list => {\n  const completedCount = list.tasks.filter(t => t.completed).length;\n\n  const sortedTasks = [\n    ...list.tasks.filter(t => !t.completed),\n    ...list.tasks.filter(t => t.completed),\n  ];\n\n  return `\n    <li class=\"cards-item\" data-id=\"${list.id}\">\n      <div class=\"card-header\">\n        <span class=\"card-title-wrapper\">\n          <i class=\"fa-solid fa-paperclip\"></i>\n          <p class=\"card-title\">${list.title}</p>\n        </span>\n        <div class=\"card-toolbar\">\n          <div class=\"card-stats\">${completedCount}/${\n    list.tasks.length\n  } completed</div>\n          <button type=\"button\" class=\"secondary-btn reset-all-tasks-btn\">\n            <i class=\"fa-solid fa-rotate-right\"></i>\n          </button>\n          <button type=\"button\" class=\"secondary-btn delete-card-btn\">\n            <i class=\"fa-solid fa-trash\"></i>\n          </button>\n        </div>\n      </div>\n      <form class=\"add-new-task-form\">\n        <input type=\"text\" name=\"taskName\" placeholder=\"Add a new task\" class=\"text-input task-input\" />\n        <button type=\"submit\" class=\"primary-btn add-new-task-btn\">\n          <i class=\"fa-solid fa-plus\"></i>\n        </button>\n      </form>\n      <ul class=\"tasks-list\">\n        ${sortedTasks.map(renderTask).join('')}\n      </ul>\n    </li>\n  `;\n};\n\nconst renderCards = () => {\n  const savedData = getSavedData();\n\n  refs.cardsContainer.innerHTML = '';\n\n  if (!savedData.length) {\n    refs.cardsContainer.classList.add('invisible');\n    refs.noCardsInfo.classList.remove('invisible');\n    return;\n  }\n\n  refs.cardsContainer.classList.remove('invisible');\n  refs.noCardsInfo.classList.add('invisible');\n\n  refs.cardsContainer.innerHTML = savedData.map(renderCard).join('');\n\n  updateStats();\n};\n\nexport default renderCards;\n","import { saveData, getSavedData } from './storage.js';\nimport renderCards from './renderCards.js';\n\nexport const addNewList = title => {\n  const data = getSavedData();\n\n  const newList = {\n    id: `list-${Date.now()}`,\n    title: title,\n    tasks: [],\n  };\n\n  data.push(newList);\n  saveData(data);\n  renderCards();\n};\n\nexport const deleteList = id => {\n  const savedData = getSavedData();\n  const newData = savedData.filter(list => list.id !== id);\n  saveData(newData);\n  renderCards();\n};\n","import { saveData, getSavedData } from './storage.js';\nimport renderCards from './renderCards.js';\n\nexport const addNewTask = (listId, taskText) => {\n  const data = getSavedData();\n\n  const list = data.find(l => l.id === listId);\n  if (!list) return;\n\n  const newTask = {\n    id: `task-${Date.now()}`,\n    text: taskText,\n    completed: false,\n  };\n\n  list.tasks.push(newTask);\n\n  saveData(data);\n  renderCards();\n};\n\nexport const deleteTask = (listId, taskId) => {\n  const data = getSavedData();\n\n  const list = data.find(l => l.id === listId);\n  if (!list) return;\n\n  list.tasks = list.tasks.filter(t => t.id !== taskId);\n\n  saveData(data);\n  renderCards();\n};\n\nexport const toggleTaskStatus = (listId, taskId) => {\n  const data = getSavedData();\n\n  const list = data.find(l => l.id === listId);\n  if (!list) return;\n\n  const task = list.tasks.find(t => t.id === taskId);\n  task.completed = !task.completed;\n\n  if (task.completed) {\n    list.tasks = [...list.tasks.filter(t => t.id !== taskId), task];\n  } else {\n    list.tasks = [task, ...list.tasks.filter(t => t.id !== taskId)];\n  }\n\n  saveData(data);\n  renderCards();\n};\n\nexport const resetAllTasks = listId => {\n  const data = getSavedData();\n\n  const list = data.find(l => l.id === listId);\n  list.tasks.map(t => (t.completed = false));\n\n  saveData(data);\n  renderCards();\n};\n\nexport const updateTask = (listId, taskId, newText) => {\n  const data = getSavedData();\n\n  const list = data.find(l => l.id === listId);\n  const task = list.tasks.find(t => t.id === taskId);\n  task.text = newText;\n  saveData(data);\n  renderCards();\n};\n","import axios from 'axios';\nimport { fetchWeatherApi } from 'openmeteo';\n\nfunction getCurrentTime() {\n  const now = new Date();\n  const weekday = now.toLocaleDateString(`en-GB`, {\n    weekday: 'long',\n  });\n  const time = now.toLocaleTimeString(`en-GB`, {\n    hour: '2-digit',\n    minute: '2-digit',\n    hour12: false,\n  });\n  return `${weekday}, ${time}`;\n}\n\nfunction formatDaylight(daylightArray) {\n  return Array.from(daylightArray).map(seconds => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor((seconds % 3600) / 60);\n    return `${hours}h ${minutes.toString().padStart(2, '0')}m`;\n  });\n}\n\nfunction getWeatherDesc(code) {\n  if (code === 0) return 'Clear';\n  if ([1, 2, 3].includes(code)) return 'Cloudy';\n  if ([45, 48].includes(code)) return 'Fog';\n  if (code >= 51 && code <= 67) return 'Rain';\n  if (code >= 71 && code <= 77) return 'Snow';\n  if (code >= 80 && code <= 82) return 'Rain showers';\n  if (code >= 95 && code <= 99) return 'Thunderstorms';\n  return 'Unknown';\n}\n\nconst fetchCoordinates = async () => {\n  const response = await axios.get('https://ipapi.co/json/');\n  return {\n    lat: response.data.latitude,\n    lon: response.data.longitude,\n    city: response.data.city,\n    country: response.data.country_name,\n  };\n};\n\nconst fetchWeather = async ({ lat, lon, city, country }) => {\n  const params = {\n    latitude: lat,\n    longitude: lon,\n    daily: [\n      'weather_code',\n      'temperature_2m_max',\n      'temperature_2m_min',\n      'sunrise',\n      'daylight_duration',\n      'sunset',\n    ],\n    current: [\n      'temperature_2m',\n      'relative_humidity_2m',\n      'rain',\n      'snowfall',\n      'weather_code',\n      'wind_speed_10m',\n      'precipitation',\n      'is_day',\n    ],\n  };\n  const url = 'https://api.open-meteo.com/v1/forecast';\n\n  const responses = await fetchWeatherApi(url, params);\n\n  const response = responses[0];\n\n  const utcOffsetSeconds = response.utcOffsetSeconds();\n\n  const current = response.current();\n  const daily = response.daily();\n\n  const sunrise = daily.variables(3);\n  const sunset = daily.variables(5);\n\n  const dailyCodes = [...daily.variables(0).valuesArray()];\n  const dailyWeatherDesc = dailyCodes.map(code => getWeatherDesc(code));\n  const dailyTempMax = [...daily.variables(1).valuesArray()];\n  const dailyTempMin = [...daily.variables(2).valuesArray()];\n\n  const days = Array.from({ length: 7 }, (_, i) => {\n    const date = new Date();\n    date.setDate(date.getDate() + i);\n    return date.toLocaleDateString('en-ES', { weekday: 'short' });\n  });\n\n  // Note: The order of weather variables in the URL query and the indices below need to match!\n  const weatherData = {\n    city,\n    country,\n    current: {\n      time: getCurrentTime(),\n      temperature_2m: Math.round(current.variables(0).value()),\n      relative_humidity_2m: current.variables(1).value(),\n      rain: current.variables(2).value(),\n      snowfall: current.variables(3).value(),\n      weather_code: getWeatherDesc(current.variables(4).value()),\n      wind_speed_10m: Math.round(current.variables(5).value()),\n      precipitation: current.variables(6).value(),\n      is_day: current.variables(7).value(),\n    },\n    daily: {\n      time: days,\n      weather_code: dailyWeatherDesc,\n      temperature_2m_max: dailyTempMax.map(temp => Math.round(temp)),\n      temperature_2m_min: dailyTempMin.map(temp => Math.round(temp)),\n      // Map Int64 values to according structure\n      sunrise: [...Array(sunrise.valuesInt64Length())].map((_, i) => {\n        const date = new Date(\n          (Number(sunrise.valuesInt64(i)) + utcOffsetSeconds) * 1000\n        );\n        const formatted = date.toLocaleTimeString('en-US', {\n          hour: 'numeric',\n          minute: '2-digit',\n          hour12: true,\n        });\n        return formatted.toLowerCase();\n      }),\n      daylight_duration: formatDaylight(daily.variables(4).valuesArray()),\n      // Map Int64 values to according structure\n      sunset: [...Array(sunset.valuesInt64Length())].map((_, i) => {\n        const date = new Date(\n          (Number(sunset.valuesInt64(i)) + utcOffsetSeconds) * 1000\n        );\n        const formatted = date.toLocaleTimeString('en-US', {\n          hour: 'numeric',\n          minute: '2-digit',\n          hour12: true,\n        });\n        return formatted.toLowerCase();\n      }),\n    },\n  };\n\n  return weatherData;\n};\n\nconst getForecast = async () => {\n  try {\n    const location = await fetchCoordinates();\n    const forecast = await fetchWeather(location);\n    return forecast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport default getForecast;\n","import { refs } from './refs.js';\n\nexport const checkSavedTheme = () => {\n  const savedTheme = localStorage.getItem('theme');\n  if (savedTheme === 'dark') {\n    refs.root.classList.add('dark');\n  }\n};\n","export default \"__VITE_ASSET__0pJmlING__\"","import { refs } from './refs.js';\nimport img from '../img/sprite.svg'\n\nconst getIconByWeatherCode = (code, isDay) => {\n  if (code === 'Clear' && isDay) return `${img}#icon-sun`;\n  if (code === 'Clear' && !isDay) return `${img}#icon-moon`;\n  if (code === 'Cloudy' && isDay) return `${img}#icon-partly-cloudy`;\n  if (code === 'Cloudy' && !isDay)\n    return `${img}#icon-partly-cloudy-night`;\n  if (code === 'Fog') return `${img}#icon-cloudy`;\n  if (code === 'Rain') return `${img}#icon-rainy`;\n  if (code === 'Snow') return `${img}#icon-snowy`;\n  if (code === 'Thunderstorms') return `${img}#icon-thunder`;\n  if (code === 'Unknown') return `${img}#icon-unknown`;\n};\n\nconst getWeatherWidgetMarkup = forecast => {\n  if (!forecast) {\n    return `<p>Oooops...</p>\n  <p>Something went wrong :( </p>\n  <p>Try again later!</p>`;\n  }\n\n  const iconPath = getIconByWeatherCode(\n    forecast.current.weather_code,\n    forecast.current.is_day\n  );\n\n  return `<div class=\"today-weather-wrapper glass-effect\">\n    <div class=\"today-weather-info\">\n      <svg class=\"today-weather-icon\" width=\"80\" height=\"80\" aria-hidden=\"true\">\n        <use href=${iconPath}></use>\n      </svg>\n      <span class=\"today-weather-data-wrapper\">\n        <p class=\"weather-text today-date\">${forecast.current.time}</p>\n        <p class=\"weather-text today-weather bold-text\">${\n          forecast.current.weather_code\n        }, ${forecast.current.temperature_2m}&deg;</p>\n        <p class=\"weather-text today-location\">${forecast.city}, ${\n    forecast.country\n  }</p>\n      </span>\n    </div>\n    <div class=\"sun-info-wrapper\">\n      <span class=\"sun-wrapper\">\n        <svg class=\"sun-icon\" width=\"24\" height=\"24\" aria-hidden=\"true\">\n          <use href=\"${img}#icon-sunrise\"></use>\n        </svg>\n        <p class=\"weather-bright-text\">${forecast.daily.sunrise[0]}</p>\n      </span>\n      <p class=\"weather-bright-text\">${forecast.daily.daylight_duration[0]}</p>\n      <span class=\"sun-wrapper\">\n        <p class=\"weather-bright-text\">${forecast.daily.sunset[0]}</p>\n        <svg class=\"sun-icon\" width=\"24\" height=\"24\" aria-hidden=\"true\">\n          <use href=\"${img}#icon-sunset\"></use>\n        </svg>\n      </span>\n    </div>\n  </div>\n  <div class=\"rain-info-wrapper glass-effect\">\n    <svg class=\"rainy-icon\" width=\"24\" height=\"24\" aria-hidden=\"true\">\n      <use href=\"${img}#icon-rainy\"></use>\n    </svg>\n    <p class=\"weather-text\">Rain: <span class=\"bold-text\">${\n      forecast.current.precipitation\n    }%</span></p>\n  </div>\n  <div class=\"additional-info-wrapper\">\n    <p class=\"weather-text\">Humidity: <span class=\"bold-text\">${\n      forecast.current.relative_humidity_2m\n    }%</span></p>\n    <p class=\"weather-text\">Wind: <span class=\"bold-text\">${\n      forecast.current.wind_speed_10m\n    } m/s</span></p>\n  </div>\n  <ul class=\"forecast-list\">\n  ${forecast.daily.time\n    .map((day, i) => {\n      return `<li class=\"forecast-item glass-effect\">\n      <p class=\"weather-text day-of-week-text\">${i === 0 ? 'Today' : day}</p>\n      <svg class=\"rainy-icon\" width=\"24\" height=\"24\" aria-hidden=\"true\">\n        <use href=\"${getIconByWeatherCode(\n          forecast.daily.weather_code[i]\n        )}\"></use>\n      </svg>\n      <p class=\"weather-text\">${forecast.daily.temperature_2m_max[i]}&deg;</p>\n      <p class=\"weather-text\">${forecast.daily.temperature_2m_min[i]}&deg;</p>\n    </li>`;\n    })\n    .join('')}\n  </ul>`;\n};\n\nconst renderWeatherWidget = forecast => {\n  refs.weatherWidget.innerHTML = '';\n  refs.weatherWidget.innerHTML = getWeatherWidgetMarkup(forecast);\n};\n\nexport default renderWeatherWidget;\n","import { refs } from './js/refs.js';\nimport { updateStats } from './js/stats.js';\nimport { deleteList, addNewList } from './js/lists.js';\nimport {\n  addNewTask,\n  deleteTask,\n  toggleTaskStatus,\n  resetAllTasks,\n  updateTask,\n} from './js/tasks.js';\nimport renderCards from './js/renderCards.js';\nimport getForecast from './js/weatherAPI.js';\nimport { checkSavedTheme } from './js/theme.js';\nimport renderWeatherWidget from './js/renderWeatherWidget.js';\n\n/* Event Listeners */\n\n//add new list\nrefs.addListForm.addEventListener('submit', e => {\n  e.preventDefault();\n  const title = refs.listInput.value.trim();\n  if (!title) return;\n  addNewList(title);\n  refs.listInput.value = '';\n});\n\n//delete list\nrefs.cardsContainer.addEventListener('click', e => {\n  if (e.target.closest('.delete-card-btn')) {\n    const cardItem = e.target.closest('.cards-item');\n    const id = cardItem.dataset.id;\n    deleteList(id);\n  }\n});\n\n//add new task\nrefs.cardsContainer.addEventListener('submit', e => {\n  const form = e.target.closest('.add-new-task-form');\n  if (form) {\n    e.preventDefault();\n\n    const input = form.querySelector('.task-input');\n    const taskText = input.value.trim();\n    if (!taskText) return;\n    const cardItem = form.closest('.cards-item');\n    const cardId = cardItem.dataset.id;\n\n    addNewTask(cardId, taskText);\n    input.value = '';\n  }\n});\n\n//delete task\nrefs.cardsContainer.addEventListener('click', e => {\n  if (e.target.closest('.delete-task-btn')) {\n    const task = e.target.closest('.task-item');\n    const taskId = task.dataset.id;\n    if (!taskId) return;\n\n    const cardItem = task.closest('.cards-item');\n    const cardId = cardItem.dataset.id;\n\n    deleteTask(cardId, taskId);\n  }\n});\n\n//complete task\nrefs.cardsContainer.addEventListener('click', e => {\n  if (e.target.closest('.task-check')) {\n    const task = e.target.closest('.task-item');\n    const taskId = task.dataset.id;\n    if (!taskId) return;\n\n    const cardItem = task.closest('.cards-item');\n    const cardId = cardItem.dataset.id;\n\n    toggleTaskStatus(cardId, taskId);\n  }\n});\n\n//reset all tasks\nrefs.cardsContainer.addEventListener('click', e => {\n  if (e.target.closest('.reset-all-tasks-btn')) {\n    const cardItem = e.target.closest('.cards-item');\n    const id = cardItem.dataset.id;\n    resetAllTasks(id);\n  }\n});\n\n//edit task\nrefs.cardsContainer.addEventListener('click', e => {\n  if (e.target.closest('.edit-task-btn')) {\n    const task = e.target.closest('.task-item');\n    const textElement = task.querySelector('.task-text');\n\n    const input = document.createElement('input');\n    input.type = 'text';\n    input.className = 'text-input task-input';\n    input.value = textElement.textContent;\n\n    textElement.replaceWith(input);\n    input.focus();\n\n    const toolbar = task.querySelector('.task-toolbar');\n    toolbar.innerHTML = `<button type=\"button\" class=\"secondary-btn save-task-btn\">\n          <i class=\"fa-solid fa-check\"></i>\n        </button>\n        <button type=\"button\" class=\"secondary-btn cancel-edit-btn\">\n          <i class=\"fa-solid fa-xmark\"></i>\n        </button>`;\n\n    task.classList.add('editing');\n  }\n});\n\n//save changes helper\nconst saveChanges = (taskItem, newText) => {\n  const cardItem = taskItem.closest('.cards-item');\n  const cardId = cardItem.dataset.id;\n  const taskId = taskItem.dataset.id;\n\n  updateTask(cardId, taskId, newText);\n};\n\n//save changes by click\nrefs.cardsContainer.addEventListener('click', e => {\n  if (e.target.closest('.save-task-btn')) {\n    const taskItem = e.target.closest('.task-item');\n\n    const newText = taskItem.querySelector('.task-input').value.trim();\n    if (!newText) return;\n\n    saveChanges(taskItem, newText);\n  }\n});\n\n//save changes by enter\nrefs.cardsContainer.addEventListener('keydown', e => {\n  if (e.key === 'Enter' && e.target.classList.contains('task-input')) {\n    const taskItem = e.target.closest('.task-item');\n\n    const newText = taskItem.querySelector('.task-input').value.trim();\n    if (!newText) return;\n\n    saveChanges(taskItem, newText);\n  }\n});\n\n//cancel changes by click\nrefs.cardsContainer.addEventListener('click', e => {\n  if (e.target.closest('.cancel-edit-btn')) {\n    renderCards();\n  }\n});\n\n//cancel changes by escape\nrefs.cardsContainer.addEventListener('keydown', e => {\n  if (e.key === 'Escape' && e.target.classList.contains('task-input')) {\n    const taskItem = e.target.closest('.task-item');\n    if (!taskItem) return;\n\n    renderCards();\n  }\n});\n\n//toggle theme\nrefs.themeToggleBtn.addEventListener('click', () => {\n  refs.root.classList.toggle('dark');\n\n  if (refs.root.classList.contains('dark')) {\n    localStorage.setItem('theme', 'dark');\n  } else {\n    localStorage.setItem('theme', 'light');\n  }\n});\n\n//toggleweather widget\nrefs.weatherButton.addEventListener('click', () => {\n  if (refs.weatherWidget.classList.contains('opened')) {\n    refs.weatherWidget.classList.remove('opened');\n    refs.faSunIcon.classList.remove('hidden');\n    refs.faCloudIcon.classList.remove('opened');\n  } else {\n    refs.weatherWidget.classList.add('opened');\n    refs.faSunIcon.classList.add('hidden');\n    refs.faCloudIcon.classList.add('opened');\n  }\n});\n\n/* Start App */\n\nconst startApp = async () => {\n  updateStats();\n  getForecast();\n  checkSavedTheme();\n  renderCards();\n  const forecast = await getForecast();\n  renderWeatherWidget(forecast);\n};\n\nstartApp();\n"],"names":["refs","getSavedData","saveData","data","updateStats","totalTasks","sum","list","completedTaks","t","renderTask","task","renderCard","completedCount","sortedTasks","renderCards","savedData","addNewList","title","newList","deleteList","id","newData","addNewTask","listId","taskText","l","newTask","deleteTask","taskId","toggleTaskStatus","resetAllTasks","updateTask","newText","getCurrentTime","now","weekday","time","formatDaylight","daylightArray","seconds","hours","minutes","getWeatherDesc","code","fetchCoordinates","response","axios","fetchWeather","lat","lon","city","country","fetchWeatherApi","utcOffsetSeconds","current","daily","sunrise","sunset","dailyWeatherDesc","dailyTempMax","dailyTempMin","days","_","i","date","temp","getForecast","location","error","checkSavedTheme","img","getIconByWeatherCode","isDay","getWeatherWidgetMarkup","forecast","day","renderWeatherWidget","e","form","input","cardId","textElement","toolbar","saveChanges","taskItem","startApp"],"mappings":"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"}