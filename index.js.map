{"version":3,"file":"index.js","sources":["../src/js/refs.js","../src/js/storage.js","../src/js/stats.js","../src/js/render.js","../src/js/lists.js","../src/js/tasks.js","../src/js/weatherAPI.js","../src/js/theme.js","../src/main.js"],"sourcesContent":["export const refs = {\n  listInput: document.querySelector('.list-input'),\n  addListForm: document.querySelector('.add-new-list-form'),\n  statsContainer: document.querySelector('.nav-stats'),\n  cardsContainer: document.querySelector('.cards-list'),\n  noCardsInfo: document.querySelector('.no-lists-info'),\n  themeToggleBtn: document.querySelector('.theme-toggle-btn'),\n  root: document.documentElement,\n};\n","export const getSavedData = () => {\n  return JSON.parse(localStorage.getItem('todoApp')) || [];\n};\n\nexport const saveData = data => {\n  localStorage.setItem('todoApp', JSON.stringify(data));\n};\n","import { getSavedData, saveData } from './storage.js';\nimport { refs } from './refs.js';\n\nexport const updateStats = () => {\n  const data = getSavedData();\n\n  if (!data.length) {\n    refs.statsContainer.textContent = '0/0 tasks completed';\n  } else {\n    const totalTasks = data.reduce((sum, list) => sum + list.tasks.length, 0);\n    const completedTaks = data.reduce(\n      (sum, list) => sum + list.tasks.filter(t => t.completed).length,\n      0\n    );\n    refs.statsContainer.textContent = `${\n      completedTaks || '0'\n    }/${totalTasks} tasks completed`;\n  }\n};\n","import { updateStats } from './stats.js';\nimport { refs } from './refs.js';\nimport { getSavedData, saveData } from './storage.js';\n\nconst renderTask = task => {\n  return `\n    <li class=\"task-item\" data-id=\"${task.id}\">\n      <span class=\"task-info-wrapper\">\n        <i class=\"task-check fa-regular ${\n          task.completed ? 'fa-circle-check' : 'fa-circle'\n        }\"></i>\n        <p class=\"task-text ${task.completed ? 'muted-text' : ''}\">${\n    task.text\n  }</p>\n      </span>\n      <div class=\"task-toolbar\">\n        <button type=\"button\" class=\"secondary-btn edit-task-btn\">\n          <i class=\"fa-solid fa-pen\"></i>\n        </button>\n        <button type=\"button\" class=\"secondary-btn delete-task-btn\">\n          <i class=\"fa-solid fa-trash\"></i>\n        </button>\n      </div>\n    </li>\n  `;\n};\n\nconst renderCard = list => {\n  const completedCount = list.tasks.filter(t => t.completed).length;\n\n  const sortedTasks = [\n    ...list.tasks.filter(t => !t.completed),\n    ...list.tasks.filter(t => t.completed),\n  ];\n\n  return `\n    <li class=\"cards-item\" data-id=\"${list.id}\">\n      <div class=\"card-header\">\n        <span class=\"card-title-wrapper\">\n          <i class=\"fa-solid fa-paperclip\"></i>\n          <p class=\"card-title\">${list.title}</p>\n        </span>\n        <div class=\"card-toolbar\">\n          <div class=\"card-stats\">${completedCount}/${\n    list.tasks.length\n  } completed</div>\n          <button type=\"button\" class=\"secondary-btn reset-all-tasks-btn\">\n            <i class=\"fa-solid fa-rotate-right\"></i>\n          </button>\n          <button type=\"button\" class=\"secondary-btn delete-card-btn\">\n            <i class=\"fa-solid fa-trash\"></i>\n          </button>\n        </div>\n      </div>\n      <form class=\"add-new-task-form\">\n        <input type=\"text\" name=\"taskName\" placeholder=\"Add a new task\" class=\"text-input task-input\" />\n        <button type=\"submit\" class=\"primary-btn add-new-task-btn\">\n          <i class=\"fa-solid fa-plus\"></i>\n        </button>\n      </form>\n      <ul class=\"tasks-list\">\n        ${sortedTasks.map(renderTask).join('')}\n      </ul>\n    </li>\n  `;\n};\n\nconst renderCards = () => {\n  const savedData = getSavedData();\n\n  refs.cardsContainer.innerHTML = '';\n\n  if (!savedData.length) {\n    refs.cardsContainer.classList.add('invisible');\n    refs.noCardsInfo.classList.remove('invisible');\n    return;\n  }\n\n  refs.cardsContainer.classList.remove('invisible');\n  refs.noCardsInfo.classList.add('invisible');\n\n  refs.cardsContainer.innerHTML = savedData.map(renderCard).join('');\n\n  updateStats();\n};\n\nexport default renderCards;\n","import { saveData, getSavedData } from './storage.js';\nimport renderCards from './render.js';\n\nexport const addNewList = title => {\n  const data = getSavedData();\n\n  const newList = {\n    id: `list-${Date.now()}`,\n    title: title,\n    tasks: [],\n  };\n\n  data.push(newList);\n  saveData(data);\n  renderCards();\n};\n\nexport const deleteList = id => {\n  const savedData = getSavedData();\n  const newData = savedData.filter(list => list.id !== id);\n  saveData(newData);\n  renderCards();\n};\n","import { saveData, getSavedData } from './storage.js';\nimport renderCards from './render.js';\n\nexport const addNewTask = (listId, taskText) => {\n  const data = getSavedData();\n\n  const list = data.find(l => l.id === listId);\n  if (!list) return;\n\n  const newTask = {\n    id: `task-${Date.now()}`,\n    text: taskText,\n    completed: false,\n  };\n\n  list.tasks.push(newTask);\n\n  saveData(data);\n  renderCards();\n};\n\nexport const deleteTask = (listId, taskId) => {\n  const data = getSavedData();\n\n  const list = data.find(l => l.id === listId);\n  if (!list) return;\n\n  list.tasks = list.tasks.filter(t => t.id !== taskId);\n\n  saveData(data);\n  renderCards();\n};\n\nexport const toggleTaskStatus = (listId, taskId) => {\n  const data = getSavedData();\n\n  const list = data.find(l => l.id === listId);\n  if (!list) return;\n\n  const task = list.tasks.find(t => t.id === taskId);\n  task.completed = !task.completed;\n\n  if (task.completed) {\n    list.tasks = [...list.tasks.filter(t => t.id !== taskId), task];\n  } else {\n    list.tasks = [task, ...list.tasks.filter(t => t.id !== taskId)];\n  }\n\n  saveData(data);\n  renderCards();\n};\n\nexport const resetAllTasks = listId => {\n  const data = getSavedData();\n\n  const list = data.find(l => l.id === listId);\n  list.tasks.map(t => (t.completed = false));\n\n  saveData(data);\n  renderCards();\n};\n\nexport const updateTask = (listId, taskId, newText) => {\n  const data = getSavedData();\n\n  const list = data.find(l => l.id === listId);\n  const task = list.tasks.find(t => t.id === taskId);\n  task.text = newText;\n  saveData(data);\n  renderCards();\n};\n","import axios from 'axios';\n\nconst WEATHER_API_KEY = 'aece857dab4839405411e9fc4ad000b3';\n\nconst fetchCountryAndCity = async () => {\n  const response = await axios.get('http://ip-api.com/json/');\n  return {\n    country: response.data.countryCode,\n    city: response.data.city,\n  };\n};\n\nconst fetchWeather = async (countryCode, city) => {\n  try {\n    const response = await axios.get(\n      'https://api.openweathermap.org/data/2.5/forecast/',\n      {\n        params: {\n          q: `${city},${countryCode}`,\n          appid: WEATHER_API_KEY,\n          units: 'metric',\n          lang: 'en',\n        },\n      }\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst getForecast = async () => {\n  const location = await fetchCountryAndCity();\n  console.log('Location: ', location);\n\n  const forecast = await fetchWeather(location.countryCode, location.city);\n  console.log('Forecast: ', forecast);\n};\n\nexport default getForecast;\n","import { refs } from './refs.js';\n\nexport const checkSavedTheme = () => {\n  const savedTheme = localStorage.getItem('theme');\n  if (savedTheme === 'dark') {\n    refs.root.classList.add('dark');\n  }\n};\n","import { refs } from './js/refs.js';\nimport { updateStats } from './js/stats.js';\nimport { deleteList, addNewList } from './js/lists.js';\nimport {\n  addNewTask,\n  deleteTask,\n  toggleTaskStatus,\n  resetAllTasks,\n  updateTask,\n} from './js/tasks.js';\nimport renderCards from './js/render.js';\nimport getForecast from './js/weatherAPI.js';\nimport { checkSavedTheme } from './js/theme.js';\n\n/* Event Listeners */\n\n//add new list\nrefs.addListForm.addEventListener('submit', e => {\n  e.preventDefault();\n  const title = refs.listInput.value.trim();\n  if (!title) return;\n  addNewList(title);\n  refs.listInput.value = '';\n});\n\n//delete list\nrefs.cardsContainer.addEventListener('click', e => {\n  if (e.target.closest('.delete-card-btn')) {\n    const cardItem = e.target.closest('.cards-item');\n    const id = cardItem.dataset.id;\n    deleteList(id);\n  }\n});\n\n//add new task\nrefs.cardsContainer.addEventListener('submit', e => {\n  const form = e.target.closest('.add-new-task-form');\n  if (form) {\n    e.preventDefault();\n\n    const input = form.querySelector('.task-input');\n    const taskText = input.value.trim();\n    if (!taskText) return;\n    const cardItem = form.closest('.cards-item');\n    const cardId = cardItem.dataset.id;\n\n    addNewTask(cardId, taskText);\n    input.value = '';\n  }\n});\n\n//delete task\nrefs.cardsContainer.addEventListener('click', e => {\n  if (e.target.closest('.delete-task-btn')) {\n    const task = e.target.closest('.task-item');\n    const taskId = task.dataset.id;\n    if (!taskId) return;\n\n    const cardItem = task.closest('.cards-item');\n    const cardId = cardItem.dataset.id;\n\n    deleteTask(cardId, taskId);\n  }\n});\n\n//complete task\nrefs.cardsContainer.addEventListener('click', e => {\n  if (e.target.closest('.task-check')) {\n    const task = e.target.closest('.task-item');\n    const taskId = task.dataset.id;\n    if (!taskId) return;\n\n    const cardItem = task.closest('.cards-item');\n    const cardId = cardItem.dataset.id;\n\n    toggleTaskStatus(cardId, taskId);\n  }\n});\n\n//reset all tasks\nrefs.cardsContainer.addEventListener('click', e => {\n  if (e.target.closest('.reset-all-tasks-btn')) {\n    const cardItem = e.target.closest('.cards-item');\n    const id = cardItem.dataset.id;\n    resetAllTasks(id);\n  }\n});\n\n//edit task\nrefs.cardsContainer.addEventListener('click', e => {\n  if (e.target.closest('.edit-task-btn')) {\n    const task = e.target.closest('.task-item');\n    const textElement = task.querySelector('.task-text');\n\n    const input = document.createElement('input');\n    input.type = 'text';\n    input.className = 'text-input task-input';\n    input.value = textElement.textContent;\n\n    textElement.replaceWith(input);\n    input.focus();\n\n    const toolbar = task.querySelector('.task-toolbar');\n    toolbar.innerHTML = `<button type=\"button\" class=\"secondary-btn save-task-btn\">\n          <i class=\"fa-solid fa-check\"></i>\n        </button>\n        <button type=\"button\" class=\"secondary-btn cancel-edit-btn\">\n          <i class=\"fa-solid fa-xmark\"></i>\n        </button>`;\n\n    task.classList.add('editing');\n  }\n});\n\n//save changes helper\nconst saveChanges = (taskItem, newText) => {\n  const cardItem = taskItem.closest('.cards-item');\n  const cardId = cardItem.dataset.id;\n  const taskId = taskItem.dataset.id;\n\n  updateTask(cardId, taskId, newText);\n};\n\n//save changes by click\nrefs.cardsContainer.addEventListener('click', e => {\n  if (e.target.closest('.save-task-btn')) {\n    const taskItem = e.target.closest('.task-item');\n\n    const newText = taskItem.querySelector('.task-input').value.trim();\n    if (!newText) return;\n\n    saveChanges(taskItem, newText);\n  }\n});\n\n//save changes by enter\nrefs.cardsContainer.addEventListener('keydown', e => {\n  if (e.key === 'Enter' && e.target.classList.contains('task-input')) {\n    const taskItem = e.target.closest('.task-item');\n\n    const newText = taskItem.querySelector('.task-input').value.trim();\n    if (!newText) return;\n\n    saveChanges(taskItem, newText);\n  }\n});\n\n//cancel changes by click\nrefs.cardsContainer.addEventListener('click', e => {\n  if (e.target.closest('.cancel-edit-btn')) {\n    renderCards();\n  }\n});\n\n//cancel changes by escape\nrefs.cardsContainer.addEventListener('keydown', e => {\n  if (e.key === 'Escape' && e.target.classList.contains('task-input')) {\n    const taskItem = e.target.closest('.task-item');\n    if (!taskItem) return;\n\n    renderCards();\n  }\n});\n\n//toggle theme\nrefs.themeToggleBtn.addEventListener('click', () => {\n  refs.root.classList.toggle('dark');\n\n  if (refs.root.classList.contains('dark')) {\n    localStorage.setItem('theme', 'dark');\n  } else {\n    localStorage.setItem('theme', 'light');\n  }\n});\n\n/* Start App */\n\nconst startApp = () => {\n  updateStats();\n  getForecast();\n  checkSavedTheme();\n  renderCards();\n};\n\nstartApp();\n"],"names":["refs","getSavedData","saveData","data","updateStats","totalTasks","sum","list","completedTaks","t","renderTask","task","renderCard","completedCount","sortedTasks","renderCards","savedData","addNewList","title","newList","deleteList","id","newData","addNewTask","listId","taskText","l","newTask","deleteTask","taskId","toggleTaskStatus","resetAllTasks","updateTask","newText","WEATHER_API_KEY","fetchCountryAndCity","response","axios","fetchWeather","countryCode","city","error","getForecast","location","forecast","checkSavedTheme","e","form","input","cardId","textElement","toolbar","saveChanges","taskItem","startApp"],"mappings":"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"}